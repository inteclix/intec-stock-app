{"version":3,"sources":["constants.js","components/Form.js","stores/toastStore.js","stores/commonStore.js","agent.js","stores/userStore.js","stores/authStore.js","stores/articleStore.js","stores/fournisseurStore.js","stores/clientStore.js","stores/achatStore.js","stores/index.js","containers/Login/index.js","components/HandleClickOutside.js","containers/Header/index.js","components/Container.js","components/Card.js","containers/Users/All.js","containers/Users/Add.js","containers/Users/Edit.js","components/Link.js","containers/Users/index.js","containers/Toast.js","AppUser.js","containers/Articles/All.js","containers/Articles/Add.js","containers/Articles/Edit.js","containers/Articles/index.js","containers/Fournisseurs/All.js","containers/Fournisseurs/Add.js","containers/Fournisseurs/Edit.js","containers/Fournisseurs/index.js","containers/Clients/All.js","containers/Clients/Add.js","containers/Clients/Edit.js","containers/Clients/index.js","containers/Achats/All.js","components/InputSearch.js","containers/Achats/Add.js","containers/Achats/Edit.js","containers/Achats/index.js","AppAdmin.js","App.js","serviceWorker.js","index.js"],"names":["colors","globalStyles","StyleSheet","create","textInput","paddingHorizontal","height","width","fontSize","backgroundColor","borderRadius","pickerInput","container","flex","margin","header","flexDirection","alignItems","justifyContent","padding","borderBottomWidth","borderBottomColor","searchInput","cards","flexWrap","card","borderWidth","cardButton","cardButtons","bottom","paddingBottom","cardBody","marginBottom","links","paddingVertical","Form","children","onSubmit","label","onSubmitLabel","ScrollView","View","style","styles","controllers","Text","TouchableOpacity","onPress","button","textButton","alignSelf","paddingTop","borderTopWidth","borderTopColor","color","fontWeight","row","text","Item","required","toastStore","toasts","toast","id","Date","getTime","type","this","push","setTimeout","dismiss","toastId","filter","t","decorate","observable","success","action","error","CommonStore","appName","version","token","window","localStorage","getItem","appLoaded","showMenu","showMenuProfile","textSearchValue","showResultsSearch","reaction","setItem","location","reload","removeItem","requests","axios","baseURL","headers","Authorization","commonStore","Auth","login","username","password","post","me","get","getUser","all","user","delete","update","put","Articles","getArticle","article","Personnes","getPersonne","personne","Clients","getClient","client","Fournisseurs","getFournisseur","fournisseur","Achats","getAchats","achat","UserStore","currentUser","email","job","isAdmin","tel","created_at","updated_at","loadingUser","updatingUser","selectedId","users","userCars","loading","message","body","show","agent","then","response","data","catch","undefined","finally","showMessage","getAll","updatingUserErrors","pullUser","updateUser","forgetUser","AuthStore","inProgress","errors","values","bind","logout","register","setToken","userStore","console","log","setUsername","setEmail","reset","ArticleStore","code","designation","prix_vente","prix_achat","qte","familleId","articles","textSearch","FournisseurStore","nom","prenom","solde","raison_social","fournisseurs","ClientStore","clients","AchatStore","fournisseurId","userId","versement","state","achats","getAchat","authStore","articleStore","fournisseurStore","clientStore","achatStore","Login","rootContainer","TextInput","value","store","onChangeText","placeholder","setPassword","secureTextEntry","React","Component","logo","logoImage","observer","HandleClickOutside","props","setWrapperRef","handleClickOutside","document","addEventListener","removeEventListener","node","wrapperRef","event","domNode","ReactDOM","findDOMNode","contains","target","handleClick","ref","MenuProfile","withRouter","history","menuProfile","size","Menu","menu","menuItem","borderColor","pathname","startsWith","role","Header","containerLeft","buttonMenu","toggleMenu","title","toggleMenuProfile","zIndex","marginLeft","marginRight","position","top","left","shadowColor","shadowOffset","shadowOpacity","shadowRadius","right","Container","Button","Card","onEdit","onDelete","isSelected","All","confirm","ActivityIndicator","length","map","index","key","Add","passwordVerification","match","params","link","Link","Users","path","component","exact","Edit","Toast","onDismiss","toastText","ToastContainer","opacity","AppUser","onChange","e","includes","Famille","name","toUpperCase","InputSearch","textValue","showResults","results","setState","_textInput","onFocus","isFocused","stores","prompt","AppAdmin","App","Boolean","hostname","AppRegistry","registerComponent","runApplication","rootTag","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf22864c.chunk.js","sourcesContent":["import { StyleSheet } from \"react-native-web\";\n\nexport const colors = {\n  gray: \"#D1D1D1\",\n  lightGray: \"#E9EBEE\",\n  darkGray: \"gray\",\n  orange: \"#FF9900\",\n  red: \"#E91E63\",\n  blue: \"#2196F3\",\n  darkBlue: \"#607d8b\"\n};\n\nexport const globalStyles = StyleSheet.create({\n  textInput: {\n    paddingHorizontal: 10,\n    height: 32,\n    width: 320,\n    fontSize: 16,\n    backgroundColor: \"white\",\n    borderRadius: 3\n  },\n  pickerInput: {\n    paddingHorizontal: 10,\n    height: 32,\n    width: 320,\n    backgroundColor: \"white\",\n    borderRadius: 3\n  },\n  container: {\n    backgroundColor: colors.gray,\n    flex: 1,\n    margin: 10\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    height: 48,\n    backgroundColor: colors.gray,\n    padding: 10,\n    borderBottomWidth: 1,\n    borderBottomColor: \"white\"\n  },\n  searchInput: {\n    paddingHorizontal: 10,\n    height: 32,\n    width: 290,\n    fontSize: 16,\n    backgroundColor: \"white\",\n    borderRadius: 3\n  },\n  cards: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    padding: 5,\n  },\n  card: {\n    alignItems: \"center\",\n    width: 222,\n    borderWidth: 1,\n    borderRadius: 5,\n    margin: 3,\n    backgroundColor: colors.lightGray,\n    justifyContent: \"space-between\"\n  },\n  cardButton: {\n    width: 24,\n    height: 24,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  cardButtons: {\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    width: \"100%\",\n    bottom: 0,\n    paddingBottom: 3\n  },\n  cardBody: {\n    width: \"100%\",\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 5,\n    marginBottom: 3,\n    borderBottomWidth: 1,\n    borderBottomColor: colors.gray\n  },\n  links: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    flexWrap: \"wrap\",\n    backgroundColor: colors.gray,\n    paddingHorizontal: 10,\n    paddingVertical: 5\n  },\n});\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  ScrollView\r\n} from \"react-native-web\";\r\nimport { colors } from \"../constants\";\r\n\r\nconst Item = ({ children, label, required }) => (\r\n  <View style={styles.row}>\r\n    <Text style={styles.text}> {label} {required && <Text style={[styles.text, { color: colors.red }]} >*</Text>}</Text>\r\n    {children}\r\n  </View>\r\n);\r\n\r\nItem.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  label: PropTypes.string.isRequired\r\n};\r\n\r\nconst Form = ({ children, onSubmit, label, onSubmitLabel }) => (\r\n  <ScrollView>\r\n    <View style={styles.container}>\r\n      {children}\r\n      <View style={styles.controllers}>\r\n        <Text> {label} </Text>\r\n        <TouchableOpacity onPress={onSubmit} style={styles.button}>\r\n          <Text style={styles.textButton}> {onSubmitLabel ? onSubmitLabel : \"Sauvegarder\"} </Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  </ScrollView>\r\n\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.gray,\r\n    alignSelf: \"center\",\r\n    width: 600,\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 5\r\n  },\r\n  controllers: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingTop: 10,\r\n    borderTopWidth: 1,\r\n    borderTopColor: colors.lightGray\r\n  },\r\n  textButton: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  button: {\r\n    backgroundColor: colors.blue,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 16,\r\n    height: 32,\r\n    borderRadius: 16,\r\n    alignSelf: \"flex-end\"\r\n  },\r\n  textInput: {\r\n    paddingHorizontal: 10,\r\n    height: 32,\r\n    width: 350,\r\n    fontSize: 16,\r\n    backgroundColor: \"white\",\r\n    borderRadius: 3\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    paddingBottom: 10,\r\n    marginBottom: 10\r\n  },\r\n  text: {\r\n    fontWeight: \"bold\"\r\n  }\r\n});\r\n\r\nForm.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  label: PropTypes.string,\r\n  onSubmitLabel: PropTypes.string\r\n};\r\n\r\nForm.Item = Item;\r\n\r\nexport default Form;\r\n","import { observable, reaction, action, decorate } from \"mobx\";\n\nclass toastStore {\n  toasts = [];\n  success(text) {\n    const toast = {\n      id: new Date().getTime(),\n      text: text,\n      type: \"success\"\n    }\n    this.toasts.push(toast)\n    setTimeout(() => this.dismiss(toast.id), 4000)\n  }\n  error(text) {\n    const toast = {\n      id: new Date().getTime(),\n      text: text,\n      type: \"error\"\n    }\n    this.toasts.push(toast)\n    setTimeout(() => this.dismiss(toast.id), 4000)\n  }\n  dismiss(toastId){\n    this.toasts = this.toasts.filter((t) => t.id !== toastId)\n  }\n}\n\ntoastStore = decorate(toastStore, {\n  toasts: observable,\n  success: action,\n  error: action,\n  dismiss: action,\n});\n\nexport default new toastStore();\n","import { observable, reaction, action, decorate } from \"mobx\";\nclass CommonStore {\n  appName = 'geo-flota';\n  version = 'v-1.0.1';\n  token = window.localStorage.getItem('jwt');\n  appLoaded = false;\n  history\n  showMenu = false\n  showMenuProfile = false\n  textSearchValue = \"\"\n  showResultsSearch = false\n  constructor() {\n    reaction(\n      () => this.token,\n      token => {\n        if (token) {\n          window.localStorage.setItem('jwt', token);\n          window.location.reload()\n        } else {\n          window.localStorage.removeItem('jwt');\n          window.location.reload()\n        }\n      }\n    );\n  }\n\n\n  setToken(token) {\n    this.token = token;\n  }\n\n  setAppLoaded() {\n    this.appLoaded = true;\n  }\n\n}\n\nCommonStore = decorate(CommonStore, {\n  appName: observable,\n  showMenu: observable,\n  showMenuProfile: observable,\n  textSearchValue: observable,\n  textSearchValue: observable,\n  version: observable,\n  token: observable,\n  appLoaded: observable,\n  history: observable,\n  setToken: action,\n  setAppLoaded: action\n});\n\nexport default new CommonStore();\n","import axios from \"axios\";\nimport commonStore from \"./stores/commonStore\";\n\n//const API_ROOT = 'https://geo-flota-server.herokuapp.com/api/';\nconst API_ROOT = \"http://localhost:8080/api/\";\n\nlet requests = axios.create({\n  baseURL: API_ROOT,\n  headers: {\n    Authorization: `Bearer ${commonStore.token}`\n  }\n});\n\nconst Auth = {\n  login: (username, password) =>\n    requests.post(\"/login\", { username, password }),\n  me: () => requests.get(\"/me\"),\n  getUser: id => requests.get(\"/users/\" + id),\n  all: () => requests.get(\"/users\"),\n  create: user => requests.post(\"/users\", { ...user }),\n  delete: id => requests.delete(\"/users/\" + id),\n  update: user => requests.put(\"/users/\" + user.id, { ...user })\n};\n\nconst Articles = {\n  getArticle: id => requests.get(\"/articles/\" + id),\n  all: () => requests.get(\"/articles\"),\n  create: article => requests.post(\"/articles\", { ...article }),\n  delete: id => requests.delete(\"/articles/\" + id),\n  update: article => requests.put(\"/articles/\" + article.id, { ...article })\n};\n\nconst Personnes = {\n  getPersonne: id => requests.get(\"/personnes/\" + id),\n  all: () => requests.get(\"/personnes\"),\n  create: personne => requests.post(\"/personnes\", { ...personne }),\n  delete: id => requests.delete(\"/personnes/\" + id),\n  update: personne => requests.put(\"/personnes/\" + personne.id, { ...personne })\n};\n\nconst Clients = {\n  getClient: id => requests.get(\"/clients/\" + id),\n  all: () => requests.get(\"/clients\"),\n  create: client => requests.post(\"/clients\", { ...client }),\n  delete: id => requests.delete(\"/clients/\" + id),\n  update: client => requests.put(\"/clients/\" + client.id, { ...client })\n};\n\nconst Fournisseurs = {\n  getFournisseur: id => requests.get(\"/fournisseurs/\" + id),\n  all: () => requests.get(\"/fournisseurs\"),\n  create: fournisseur => requests.post(\"/fournisseurs\", { ...fournisseur }),\n  delete: id => requests.delete(\"/fournisseurs/\" + id),\n  update: fournisseur => requests.put(\"/fournisseurs/\" + fournisseur.id, { ...fournisseur })\n};\n\nconst Achats = {\n  getAchats: id => requests.get(\"/achats/\" + id),\n  all: () => requests.get(\"/achats\"),\n  create: achat => requests.post(\"/achats\", { ...achat }),\n  delete: id => requests.delete(\"/achats/\" + id),\n  update: achat => requests.put(\"/achats/\" + achat.id, { ...achat })\n};\n\nexport default {\n  Auth,\n  Articles,\n  Personnes,\n  Clients,\n  Fournisseurs,\n  Achats\n};\n","import { observable, action, decorate } from \"mobx\";\n\nimport agent from \"../agent\";\nimport toastStore from \"./toastStore\";\n\nclass UserStore {\n  currentUser = {\n    id: 0,\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    job: null,\n    isAdmin: 0,\n    tel: null,\n    created_at: null,\n    updated_at: null\n  };\n  loadingUser = false;\n  updatingUser = false;\n  selectedId = 0;\n  updatingUserErrors;\n  user = {\n    id: 0,\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    job: null,\n    isAdmin: 0,\n    tel: null,\n    created_at: null,\n    updated_at: null\n  };\n  users = [];\n  userCars = [];\n  loading = false;\n  message = {\n    type: \"\",\n    body: \"\",\n    show: false\n  };\n\n  hideMessage() {\n    this.message = {\n      type: \"\",\n      body: \"\",\n      show: false\n    };\n  }\n\n  showMessage(message) {\n    this.message = message;\n  }\n\n  getAll() {\n    this.loading = true;\n    return agent.Auth.all()\n      .then(response => {\n        return response.data;\n      })\n      .then(\n        action(data => {\n          this.users = data;\n        })\n      )\n      .catch(error => {\n        let body =\n          error.response !== undefined\n            ? error.response.data.message\n            : error.message;\n        toastStore.error(body);\n      })\n      .finally(\n        action(() => {\n          this.loading = false;\n        })\n      );\n  }\n\n  create() {\n    this.loading = true;\n    return agent.Auth.create(this.user)\n      .then(response => {\n        return response.data;\n      })\n      .then(\n        action(data => {\n          toastStore.success(data.message);\n        })\n      )\n      .catch(error => {\n        let body =\n          error.response !== undefined\n            ? error.response.data.message\n            : error.message;\n        toastStore.error(\"Error verify your input data\");\n      })\n      .finally(\n        action(() => {\n          this.loading = false;\n          //commonStore.history.push('/companies')\n        })\n      );\n  }\n\n  me() {\n    this.loadingUser = true;\n    return agent.Auth.me()\n      .then(response => {\n        return response.data;\n      })\n      .then(\n        action(user => {\n          this.currentUser = user;\n        })\n      )\n      .finally(\n        action(() => {\n          this.loadingUser = false;\n        })\n      );\n  }\n\n  getUser(id) {\n    this.loading = true;\n    return agent.Auth.getUser(id)\n      .then(response => {\n        return response.data;\n      })\n      .then(\n        action(data => {\n          this.user = data;\n        })\n      )\n      .catch(error => {\n        let body =\n          error.response !== undefined\n            ? error.response.data.message\n            : error.message;\n        this.showMessage({\n          type: \"error\",\n          body: body,\n          show: true\n        });\n      })\n      .finally(\n        action(() => {\n          this.loading = false;\n        })\n      );\n  }\n\n  delete(id) {\n    this.loading = true;\n    return agent.Auth.delete(id)\n      .then(response => {\n        return response.data;\n      })\n      .then(\n        action(data => {\n          toastStore.success(data.message);\n        })\n      )\n      .catch(error => {\n        let body =\n          error.response !== undefined\n            ? error.response.data.message\n            : error.message;\n        toastStore.error(body);\n      })\n      .finally(action(() => this.getAll()));\n  }\n\n  update() {\n    this.loading = true;\n    return agent.Auth.update(this.user)\n      .then(response => {\n        return response.data;\n      })\n      .then(\n        action(data => {\n          toastStore.success(data.message);\n        })\n      )\n      .catch(error => {\n        let body =\n          error.response !== undefined\n            ? error.response.data.message\n            : error.message;\n        toastStore.error(\"Error verify your input data\");\n      })\n      .finally(\n        action(() => {\n          this.loading = false;\n          //commonStore.history.push('/companies')\n        })\n      );\n  }\n\n  forgetUser() {\n    this.currentUser = undefined;\n  }\n}\n\nUserStore = decorate(UserStore, {\n  currentUser: observable,\n  loadingUser: observable,\n  updatingUser: observable,\n  updatingUserErrors: observable,\n  selectedId: observable,\n  user: observable,\n  users: observable,\n  userCars: observable,\n  loading: observable,\n  message: observable,\n  pullUser: action,\n  updateUser: action,\n  forgetUser: action\n});\n\nexport default new UserStore();\n","import { observable, action, decorate } from \"mobx\";\n\nimport agent from \"../agent\";\nimport userStore from \"./userStore\";\nimport commonStore from \"./commonStore\";\nimport toastStore from \"./toastStore\";\n\nclass AuthStore {\n  inProgress = false;\n  errors = undefined;\n\n  values = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.register = this.register.bind(this);\n  }\n\n  setUsername(username) {\n    this.values.username = username;\n  }\n\n  setEmail(email) {\n    this.values.email = email;\n  }\n\n  setPassword(password) {\n    this.values.password = password;\n  }\n\n  reset() {\n    this.values.username = \"\";\n    this.values.email = \"\";\n    this.values.password = \"\";\n  }\n\n  login() {\n    this.inProgress = true;\n    return (\n      agent.Auth.login(this.values.username, this.values.password)\n        .then(response => commonStore.setToken(response.data.token))\n        //.then(() => userStore.pullUser())\n        .catch(error => {\n          let body =\n            error.response !== undefined\n              ? error.response.data.message\n              : error.message;\n          toastStore.error(body);\n        })\n        .finally(\n          action(() => {\n            this.inProgress = false;\n          })\n        )\n    );\n  }\n\n  register() {\n    this.inProgress = true;\n    this.errors = undefined;\n    return agent.Auth.register(\n      this.values.username,\n      this.values.email,\n      this.values.password\n    )\n      .then(response => commonStore.setToken(response.data.user.token))\n      .then(() => userStore.pullUser())\n      .catch(\n        action(error => {\n          console.log(error.data);\n        })\n      )\n      .finally(\n        action(() => {\n          this.inProgress = false;\n        })\n      );\n  }\n\n  logout() {\n    commonStore.setToken(undefined);\n  }\n}\n\nAuthStore = decorate(AuthStore, {\n  inProgress: observable,\n  errors: observable,\n  values: observable,\n  setUsername: action,\n  setEmail: action,\n  reset: action,\n  login: action,\n  register: action,\n  logout: action\n});\n\nexport default new AuthStore();\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nimport agent from \"../agent\";\r\nimport toastStore from \"./toastStore\";\r\n\r\nclass ArticleStore {\r\n  loadingUser = false;\r\n  updatingUser = false;\r\n  selectedId = 0;\r\n  updatingUserErrors;\r\n  article = {\r\n    id: 0,\r\n    code: \"\",\r\n    designation: \"\",\r\n    prix_vente: 0.0,\r\n    prix_achat: 0.0,\r\n    qte: 0,\r\n    familleId: 1,\r\n    created_at: null,\r\n    updated_at: null\r\n  };\r\n  articles = [];\r\n  loading = false;\r\n  message = {\r\n    type: \"\",\r\n    body: \"\",\r\n    show: false\r\n  };\r\n  textSearch=\"\"\r\n\r\n  hideMessage() {\r\n    this.message = {\r\n      type: \"\",\r\n      body: \"\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.message = message;\r\n  }\r\n\r\n  getAll() {\r\n    this.loading = true;\r\n    return agent.Articles.all()\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          this.articles = data;\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(body);\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  create() {\r\n    this.loading = true;\r\n    return agent.Articles.create(this.article)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(\"Error verify your input data\");\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n          //commonStore.history.push('/companies')\r\n        })\r\n      );\r\n  }\r\n\r\n  getArticle(id) {\r\n    this.loading = true;\r\n    return agent.Articles.getArticle(id)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          this.article = data;\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        this.showMessage({\r\n          type: \"error\",\r\n          body: body,\r\n          show: true\r\n        });\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id) {\r\n    this.loading = true;\r\n    return agent.Articles.delete(id)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(body);\r\n      })\r\n      .finally(action(() => this.getAll()));\r\n  }\r\n\r\n  update() {\r\n    this.loading = true;\r\n    return agent.Articles.update(this.article)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(\"Error verify your input data\");\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n          //commonStore.history.push('/companies')\r\n        })\r\n      );\r\n  }\r\n\r\n  forgetUser() {\r\n    this.currentUser = undefined;\r\n  }\r\n}\r\n\r\nArticleStore = decorate(ArticleStore, {\r\n  selectedId: observable,\r\n  article: observable,\r\n  articles: observable,\r\n  loading: observable,\r\n  message: observable,\r\n  textSearch: observable\r\n});\r\n\r\nexport default new ArticleStore();\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nimport agent from \"../agent\";\r\nimport toastStore from \"./toastStore\";\r\n\r\nclass FournisseurStore {\r\n  loadingUser = false;\r\n  updatingUser = false;\r\n  selectedId = 0;\r\n  updatingUserErrors;\r\n  fournisseur = {\r\n    id: 0,\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    tel: \"\",\r\n    solde: 0,\r\n    type: 0,\r\n    raison_social: \"\"\r\n  };\r\n  fournisseurs = [];\r\n  loading = false;\r\n  message = {\r\n    type: \"\",\r\n    body: \"\",\r\n    show: false\r\n  };\r\n\r\n  hideMessage() {\r\n    this.message = {\r\n      type: \"\",\r\n      body: \"\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.message = message;\r\n  }\r\n\r\n  getAll() {\r\n    this.loading = true;\r\n    return agent.Fournisseurs.all()\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          this.fournisseurs = data;\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(body);\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  create() {\r\n    this.loading = true;\r\n    return agent.Fournisseurs.create(this.fournisseur)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(\"Error verify your input data\");\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n          //commonStore.history.push('/companies')\r\n        })\r\n      );\r\n  }\r\n\r\n  getFournisseur(id) {\r\n    this.loading = true;\r\n    return agent.Fournisseurs.getFournisseur(id)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          this.fournisseur = data;\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        this.showMessage({\r\n          type: \"error\",\r\n          body: body,\r\n          show: true\r\n        });\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id) {\r\n    this.loading = true;\r\n    return agent.Fournisseurs.delete(id)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(body);\r\n      })\r\n      .finally(action(() => this.getAll()));\r\n  }\r\n\r\n  update() {\r\n    this.loading = true;\r\n    return agent.Fournisseurs.update(this.fournisseur)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(\"Error verify your input data\");\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n          //commonStore.history.push('/companies')\r\n        })\r\n      );\r\n  }\r\n\r\n  forgetUser() {\r\n    this.currentUser = undefined;\r\n  }\r\n}\r\n\r\nFournisseurStore = decorate(FournisseurStore, {\r\n  selectedId: observable,\r\n  fournisseur: observable,\r\n  fournisseurs: observable,\r\n  loading: observable,\r\n  message: observable,\r\n});\r\n\r\nexport default new FournisseurStore();\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nimport agent from \"../agent\";\r\nimport toastStore from \"./toastStore\";\r\n\r\nclass ClientStore {\r\n  loadingUser = false;\r\n  updatingUser = false;\r\n  selectedId = 0;\r\n  updatingUserErrors;\r\n  client = {\r\n    id: 0,\r\n    nom: \"\",\r\n    prenom: \"\",\r\n    tel: \"\",\r\n    solde: 0,\r\n    type: 0,\r\n    raison_social: \"\"\r\n  };\r\n  clients = [];\r\n  loading = false;\r\n  message = {\r\n    type: \"\",\r\n    body: \"\",\r\n    show: false\r\n  };\r\n\r\n  hideMessage() {\r\n    this.message = {\r\n      type: \"\",\r\n      body: \"\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.message = message;\r\n  }\r\n\r\n  getAll() {\r\n    this.loading = true;\r\n    return agent.Clients.all()\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          this.clients = data;\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(body);\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  create() {\r\n    this.loading = true;\r\n    return agent.Clients.create(this.client)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(\"Error verify your input data\");\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n          //commonStore.history.push('/companies')\r\n        })\r\n      );\r\n  }\r\n\r\n  getClient(id) {\r\n    this.loading = true;\r\n    return agent.Clients.getClient(id)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          this.client = data;\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        this.showMessage({\r\n          type: \"error\",\r\n          body: body,\r\n          show: true\r\n        });\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id) {\r\n    this.loading = true;\r\n    return agent.Clients.delete(id)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(body);\r\n      })\r\n      .finally(action(() => this.getAll()));\r\n  }\r\n\r\n  update() {\r\n    this.loading = true;\r\n    return agent.Clients.update(this.client)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(\"Error verify your input data\");\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n          //commonStore.history.push('/companies')\r\n        })\r\n      );\r\n  }\r\n\r\n  forgetUser() {\r\n    this.currentUser = undefined;\r\n  }\r\n}\r\n\r\nClientStore = decorate(ClientStore, {\r\n  selectedId: observable,\r\n  client: observable,\r\n  clients: observable,\r\n  loading: observable,\r\n  message: observable,\r\n});\r\n\r\nexport default new ClientStore();\r\n","import { observable, action, decorate } from \"mobx\";\r\n\r\nimport agent from \"../agent\";\r\nimport toastStore from \"./toastStore\";\r\n\r\nclass AchatStore {\r\n  selectedId = 0;\r\n  achat = {\r\n    id: 0,\r\n    fournisseurId: 0,\r\n    userId: 0,\r\n    versement: 0,\r\n    state: \"en attente\",\r\n    articles: [],\r\n    created_at: null,\r\n    updated_at: null\r\n  };\r\n  achats = [];\r\n  loading = false;\r\n  message = {\r\n    type: \"\",\r\n    body: \"\",\r\n    show: false\r\n  };\r\n\r\n  hideMessage() {\r\n    this.message = {\r\n      type: \"\",\r\n      body: \"\",\r\n      show: false\r\n    };\r\n  }\r\n\r\n  showMessage(message) {\r\n    this.message = message;\r\n  }\r\n\r\n  getAll() {\r\n    this.loading = true;\r\n    return agent.Achats.all()\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          this.achats = data;\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(body);\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  create() {\r\n    this.loading = true;\r\n    return agent.Achats.create(this.achat)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(\"Error verify your input data\");\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n          //commonStore.history.push('/companies')\r\n        })\r\n      );\r\n  }\r\n\r\n  getAchat(id) {\r\n    this.loading = true;\r\n    return agent.Achats.getAchat(id)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          this.achat = data;\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        this.showMessage({\r\n          type: \"error\",\r\n          body: body,\r\n          show: true\r\n        });\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n        })\r\n      );\r\n  }\r\n\r\n  delete(id) {\r\n    this.loading = true;\r\n    return agent.Achats.delete(id)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(body);\r\n      })\r\n      .finally(action(() => this.getAll()));\r\n  }\r\n\r\n  update() {\r\n    this.loading = true;\r\n    return agent.Achats.update(this.achat)\r\n      .then(response => {\r\n        return response.data;\r\n      })\r\n      .then(\r\n        action(data => {\r\n          toastStore.success(data.message);\r\n        })\r\n      )\r\n      .catch(error => {\r\n        let body =\r\n          error.response !== undefined\r\n            ? error.response.data.message\r\n            : error.message;\r\n        toastStore.error(\"Error verify your input data\");\r\n      })\r\n      .finally(\r\n        action(() => {\r\n          this.loading = false;\r\n          //commonStore.history.push('/companies')\r\n        })\r\n      );\r\n  }\r\n}\r\n\r\nAchatStore = decorate(AchatStore, {\r\n  selectedId: observable,\r\n  achat: observable,\r\n  achats: observable,\r\n  loading: observable,\r\n});\r\n\r\nexport default new AchatStore();\r\n","import toastStore from \"./toastStore\";\r\nimport authStore from \"./authStore\";\r\nimport commonStore from \"./commonStore\";\r\nimport userStore from \"./userStore\";\r\nimport articleStore from \"./articleStore\";\r\nimport fournisseurStore from './fournisseurStore'\r\nimport clientStore from './clientStore'\r\nimport achatStore from './achatStore'\r\nexport default {\r\n  toastStore,\r\n  authStore,\r\n  commonStore,\r\n  userStore,\r\n  articleStore,\r\n  fournisseurStore,\r\n  clientStore,\r\n  achatStore\r\n};\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  TextInput,\r\n  Text,\r\n  TouchableOpacity\r\n} from \"react-native-web\";\r\n\r\nimport Form from \"../../components/Form\";\r\nimport { colors, globalStyles } from \"../../constants\";\r\n\r\nimport store from \"../../stores\";\r\nclass Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={styles.rootContainer}>\r\n        <View style={styles.container}>\r\n          <Form.Item required label=\"Nom de l'utilisateur\">\r\n            <TextInput\r\n              value={store.authStore.values.username}\r\n              onChangeText={text => {\r\n                store.authStore.setUsername(text);\r\n              }}\r\n              placeholder=\"Username\"\r\n              style={globalStyles.textInput}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item required label=\"Mot de pass\">\r\n            <TextInput\r\n              value={store.authStore.values.password}\r\n              onChangeText={text => {\r\n                store.authStore.setPassword(text);\r\n              }}\r\n              secureTextEntry\r\n              placeholder=\"Mot de pass\"\r\n              style={globalStyles.textInput}\r\n            />\r\n          </Form.Item>\r\n          <View style={styles.controllers}>\r\n            <Text>\r\n              Cliquez sur OK pour vous connecter à\r\n              <Text style={{ fontWeight: \"bold\" }}> My-Stock </Text>\r\n            </Text>\r\n            <TouchableOpacity\r\n              onPress={() => store.authStore.login()}\r\n              style={styles.button}\r\n            >\r\n              <Text style={styles.textButton}>OK</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    backgroundColor: colors.lightGray,\r\n    width: 960,\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  logo: {\r\n    backgroundColor: colors.darkBlue,\r\n    padding: 5,\r\n    marginBottom: 20,\r\n    paddingVertical: 20,\r\n    borderRadius: 5,\r\n    width: \"100%\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  logoImage: {\r\n    width: 256,\r\n    height: 256\r\n  },\r\n  container: {\r\n    backgroundColor: colors.gray,\r\n    alignSelf: \"center\",\r\n    width: 600,\r\n    padding: 10,\r\n    margin: 10,\r\n    borderRadius: 5\r\n  },\r\n  controllers: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingTop: 10,\r\n    borderTopWidth: 1,\r\n    borderTopColor: colors.lightGray\r\n  },\r\n  textButton: {\r\n    color: \"white\",\r\n    fontWeight: \"bold\"\r\n  },\r\n  button: {\r\n    backgroundColor: colors.blue,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 16,\r\n    height: 32,\r\n    borderRadius: 16,\r\n    alignSelf: \"flex-end\"\r\n  }\r\n});\r\n\r\nexport default observer(Login);\r\n","import React from \"react\";\nimport ReactDOM from 'react-dom'\nimport PropTypes from \"prop-types\";\nimport { View } from \"react-native-web\";\n/**\n * Component that alerts if you click outside of it\n */\nexport default class HandleClickOutside extends React.Component {\n  constructor(props) {\n    super(props);\n    this.setWrapperRef = this.setWrapperRef.bind(this);\n    this.handleClickOutside = this.handleClickOutside.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"mousedown\", this.handleClickOutside);\n  }\n\n  /**\n   * Set the wrapper ref\n   */\n  setWrapperRef(node) {\n    this.wrapperRef = node;\n  }\n\n  /**\n   * Alert if clicked on outside of element\n   */\n  handleClickOutside(event) {\n    const domNode = ReactDOM.findDOMNode(this.wrapperRef);\n    if (!domNode || !domNode.contains(event.target)) {\n      this.props.handleClick()\n    }\n  }\n\n  render() {\n    return <div ref={this.setWrapperRef}>{this.props.children}</div>;\n  }\n}\n\nHandleClickOutside.propTypes = {\n  handleClick: PropTypes.func.isRequired\n};\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { withRouter } from \"react-router\";\n\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native-web\";\nimport {\n  FaBars,\n  FaHome,\n  FaCube,\n  FaFileAlt,\n  FaCubes,\n  FaUserFriends,\n  FaUserAlt,\n  FaUserTie,\n  FaShippingFast,\n  FaShoppingCart,\n  FaRocket\n} from \"react-icons/fa\";\nimport store from \"../../stores\";\nimport { colors } from \"../../constants\";\nimport HandleClickOutside from \"../../components/HandleClickOutside\";\n\nconst MenuProfile = withRouter(({ history }) => (\n  <HandleClickOutside\n    handleClick={() => (store.commonStore.showMenuProfile = false)}\n  >\n    <View style={styles.menuProfile}>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\",\n          borderBottomWidth: 1,\n          paddingBottom: 10\n        }}\n      >\n        <FaUserAlt size={24} />\n        <View>\n          <Text>{store.userStore.currentUser.username}</Text>\n          <Text>{store.userStore.currentUser.email}</Text>\n        </View>\n      </View>\n      <View\n        style={{\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n          alignItems: \"center\",\n          paddingBottom: 5,\n          paddingTop: 10\n        }}\n      >\n        <TouchableOpacity onPress={() => history.push(\"/settings\")}>\n          <Text>Paramètre</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={() => store.authStore.logout()}>\n          <Text>Déconnecte</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  </HandleClickOutside>\n));\n\nconst Menu = withRouter(({ history, location }) => (\n  <HandleClickOutside handleClick={() => (store.commonStore.showMenu = false)}>\n    <View style={styles.menu}>\n      <TouchableOpacity\n        onPress={() => history.push(\"/\")}\n        style={[\n          styles.menuItem,\n          {\n            borderColor:\n              location.pathname === \"/\" ? colors.orange : colors.lightGray\n          }\n        ]}\n      >\n        <FaHome size={32} />\n        <Text style={{ fontWeight: location.pathname === \"/\" ? \"bold\" : \"\" }}>\n          Accueil\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => history.push(\"/users\")}\n        style={[\n          styles.menuItem,\n          {\n            borderColor: location.pathname.startsWith(\"/users\")\n              ? colors.orange\n              : colors.lightGray\n          }\n        ]}\n      >\n        <FaUserAlt size={32} />\n        <Text\n          style={{\n            fontWeight: location.pathname.startsWith(\"/users\") ? \"bold\" : \"\"\n          }}\n        >\n          Utilisateurs\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => history.push(\"/articles\")}\n        style={[\n          styles.menuItem,\n          {\n            borderColor: location.pathname.startsWith(\"/articles\")\n              ? colors.orange\n              : colors.lightGray\n          }\n        ]}\n      >\n        <FaCubes size={32} />\n        <Text\n          style={{\n            fontWeight: location.pathname.startsWith(\"/articles\") ? \"bold\" : \"\"\n          }}\n        >\n          Articles\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => history.push(\"/fournisseurs\")}\n        style={[\n          styles.menuItem,\n          {\n            borderColor: location.pathname.startsWith(\"/fournisseurs\")\n              ? colors.orange\n              : colors.lightGray\n          }\n        ]}\n      >\n        <FaUserTie size={32} />\n        <Text\n          style={{\n            fontWeight: location.pathname.startsWith(\"/fournisseurs\") ? \"bold\" : \"\"\n          }}\n        >\n          Fournisseurs\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => history.push(\"/clients\")}\n        style={[\n          styles.menuItem,\n          {\n            borderColor: location.pathname.startsWith(\"/clients\")\n              ? colors.orange\n              : colors.lightGray\n          }\n        ]}\n      >\n        <FaUserFriends size={32} />\n        <Text\n          style={{\n            fontWeight: location.pathname.startsWith(\"/clients\") ? \"bold\" : \"\"\n          }}\n        >\n          Clients\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => history.push(\"/ventes\")}\n        style={[\n          styles.menuItem,\n          {\n            borderColor: location.pathname.startsWith(\"/ventes\")\n              ? colors.orange\n              : colors.lightGray\n          }\n        ]}\n      >\n        <FaShoppingCart size={32} />\n        <Text\n          style={{\n            fontWeight: location.pathname.startsWith(\"/ventes\") ? \"bold\" : \"\"\n          }}\n        >\n          Ventes\n        </Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        onPress={() => history.push(\"/achats\")}\n        style={[\n          styles.menuItem,\n          {\n            borderColor: location.pathname.startsWith(\"/achats\")\n              ? colors.orange\n              : colors.lightGray\n          }\n        ]}\n      >\n        <FaShippingFast size={32} />\n        <Text\n          style={{\n            fontWeight: location.pathname.startsWith(\"/achats\") ? \"bold\" : \"\"\n          }}\n        >\n          Achats\n        </Text>\n      </TouchableOpacity>\n\n      {store.userStore.currentUser.role === \"superadmin\" && (\n        <TouchableOpacity\n          onPress={() => history.push(\"/trackers\")}\n          style={[\n            styles.menuItem,\n            {\n              borderColor: location.pathname.startsWith(\"/trackers\")\n                ? colors.orange\n                : colors.lightGray\n            }\n          ]}\n        >\n          <FaRocket size={32} />\n          <Text\n            style={{\n              fontWeight: location.pathname.startsWith(\"/trackers\")\n                ? \"bold\"\n                : \"\"\n            }}\n          >\n            Traqueurs\n          </Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  </HandleClickOutside>\n));\n\nclass Header extends React.Component {\n  toggleMenu() {\n    store.commonStore.showMenu = true;\n  }\n  toggleMenuProfile() {\n    store.commonStore.showMenuProfile = true;\n  }\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.containerLeft}>\n          <TouchableOpacity style={styles.buttonMenu} onPress={this.toggleMenu}>\n            <FaBars size={16} color=\"black\" />\n          </TouchableOpacity>\n          {store.commonStore.showMenu && <Menu />}\n          <TouchableOpacity onPress={() => this.props.history.push(\"/\")}>\n            <Text style={styles.title}>My-Stock</Text>\n          </TouchableOpacity>\n        </View>\n        <View>\n          <TouchableOpacity\n            onPress={this.toggleMenuProfile}\n            style={styles.buttonMenu}\n          >\n            <FaUserAlt size={16} color=\"black\" />\n          </TouchableOpacity>\n          {store.commonStore.showMenuProfile && <MenuProfile />}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    zIndex: 99999,\n    flexDirection: \"row\",\n    height: 48,\n    width: \"100%\",\n    backgroundColor: colors.gray,\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 5\n  },\n  containerLeft: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    fontSize: 16\n  },\n  buttonMenu: {\n    width: 32,\n    height: 32,\n    borderRadius: 16,\n    backgroundColor: colors.gray,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginLeft: 10,\n    marginRight: 10\n  },\n  menu: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    position: \"absolute\",\n    top: 45,\n    left: 0,\n    width: 316,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: colors.gray,\n    borderRadius: 3,\n    padding: 5,\n    shadowColor: \"black\",\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 10\n  },\n  menuItem: {\n    backgroundColor: colors.lightGray,\n    alignItems: \"center\",\n    borderWidth: 1,\n    width: 96,\n    height: 64,\n    margin: 3,\n    justifyContent: \"space-around\",\n    borderRadius: 5,\n    borderColor: colors.lightGray\n  },\n  menuProfile: {\n    justifyContent: \"space-between\",\n    position: \"absolute\",\n    top: 45,\n    right: 0,\n    width: 250,\n    backgroundColor: colors.gray,\n    padding: 5,\n    borderRadius: 5,\n    shadowColor: \"black\",\n    shadowOffset: { width: 3, height: 3 },\n    shadowOpacity: 0.5,\n    shadowRadius: 10\n  }\n});\n\nexport default withRouter(observer(Header));\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { View, Text, StyleSheet } from \"react-native-web\";\r\n\r\nimport { colors } from \"../constants\";\r\n\r\nconst Container = ({ children, title, style }) => (\r\n  <View style={[styles.container, style]}>\r\n    <View\r\n      style={{\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 5,\r\n        backgroundColor: colors.lightGray\r\n      }}\r\n    >\r\n      <Text style={{ fontSize: 20, fontWeight: \"bold\" }}>{title}</Text>\r\n    </View>\r\n    {children}\r\n  </View>\r\n);\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: colors.lightGray,\r\n    width: 960,\r\n    flex: 1\r\n  }\r\n});\r\n\r\nContainer.propTypes = {\r\n  title: PropTypes.string,\r\n  //style: PropTypes.object\r\n};\r\n\r\nexport default Container;\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { StyleSheet, View, TouchableOpacity } from \"react-native-web\";\nimport { colors, globalStyles } from \"../constants\";\n\nimport { FaPencilAlt, FaTrashAlt } from \"react-icons/fa\";\n\nexport const Button = ({onPress, children})=>(\n  <TouchableOpacity onPress={onPress} style={globalStyles.cardButton}>\n    {children}\n  </TouchableOpacity>\n)\n\nconst Card = ({ children, onPress, onEdit, onDelete, isSelected }) => (\n  <TouchableOpacity\n    onPress={onPress}\n    style={[\n      globalStyles.card,\n      {\n        borderColor: isSelected ? colors.orange : colors.lightGray\n      }\n    ]}\n  >\n    <View style={globalStyles.cardBody}>{children}</View>\n    <View style={globalStyles.cardButtons}>\n      <Button onPress={onEdit} >\n        <FaPencilAlt size={16} />\n      </Button>\n      <Button onPress={onDelete}>\n        <FaTrashAlt color={colors.red} size={16} />\n      </Button>\n    </View>\n  </TouchableOpacity>\n);\n\n\n\nCard.propTypes = {\n  onPress: PropTypes.func.isRequired,\n  onDelete: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n  isSelected: PropTypes.bool.isRequired\n};\n\nexport default Card;\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { View, Text, TextInput, ScrollView, ActivityIndicator } from \"react-native-web\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Card from \"../../components/Card\";\r\n\r\nclass All extends React.Component {\r\n  componentDidMount() {\r\n    store.userStore.getAll()\r\n    store.userStore.selectedId = 0\r\n  }\r\n  delete(id) {\r\n    if (window.confirm('Do you delete that User?')) {\r\n      store.userStore.delete(id)\r\n    }\r\n  }\r\n  render() {\r\n    if (store.userStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      )\r\n    }\r\n    if (store.userStore.users.length === 0) {\r\n      return (\r\n        <View style={globalStyles.container}>\r\n          <Text>Il ya aucun utilisateur</Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={globalStyles.container}>\r\n        <View style={globalStyles.header}>\r\n          <TextInput\r\n            placeholder=\"Rechercher un utilisateur ...\"\r\n            style={globalStyles.searchInput}\r\n          />\r\n        </View>\r\n        <ScrollView>\r\n          <View style={globalStyles.cards}>\r\n            {\r\n              store.userStore.users.map((user, index) => (\r\n                <Card\r\n                  key={index}\r\n                  isSelected={store.userStore.selectedId === user.id}\r\n                  onDelete={() => this.delete(user.id)}\r\n                  onEdit={() => this.props.history.push(\"/users/edit/\" + user.id)}\r\n                  onPress={() => {\r\n                    store.userStore.selectedId = user.id;\r\n                  }}\r\n                >\r\n                  <Text>{user.username}</Text>\r\n                  <Text>{user.email}</Text>\r\n                </Card>\r\n              ))\r\n            }\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(All);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  ActivityIndicator,\r\n  Picker\r\n} from \"react-native-web\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    store.userStore.user = {\r\n      id: 0,\r\n      username: \"\",\r\n      email: \"\",\r\n      tel: \"\",\r\n      job: \"\",\r\n      isAdmin: 0,\r\n      password: \"\",\r\n      passwordVerification: \"\",\r\n      created_at: \"\",\r\n      updated_at: \"\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (store.userStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour créer un nouvel utilisateur\"\r\n        onSubmit={() => store.userStore.create()}\r\n      >\r\n        <Form.Item required label=\"Nom de l'utilisateur\">\r\n          <TextInput\r\n            value={store.userStore.user.username}\r\n            onChangeText={text => (store.userStore.user.username = text)}\r\n            placeholder=\"Nom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item required label=\"Email de l'utilisateur\">\r\n          <TextInput\r\n            value={store.userStore.user.email}\r\n            onChangeText={text => (store.userStore.user.email = text)}\r\n            placeholder=\"Email\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"N° Telephone\">\r\n          <TextInput\r\n            value={store.userStore.user.tel}\r\n            onChangeText={text => (store.userStore.user.tel = text)}\r\n            placeholder=\"Telephone\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Post de travail\">\r\n          <TextInput\r\n            value={store.userStore.user.job}\r\n            onChangeText={text => (store.userStore.user.job = text)}\r\n            placeholder=\"Travail\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item required label=\"Mot de pass\">\r\n          <TextInput\r\n            value={store.userStore.user.password}\r\n            onChangeText={text => (store.userStore.user.password = text)}\r\n            placeholder=\"Mot de pass\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  Picker,\r\n  View,\r\n  ActivityIndicator,\r\n  Text\r\n} from \"react-native-web\";\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    store.userStore.getUser(id);\r\n  }\r\n\r\n  render() {\r\n    if (store.userStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour modifier l'utilisateur\"\r\n        onSubmit={() => store.userStore.update()}\r\n      >\r\n        <Form.Item required label=\"Nom de l'utilisateur\">\r\n          <TextInput\r\n            value={store.userStore.user.username}\r\n            onChangeText={text => (store.userStore.user.username = text)}\r\n            placeholder=\"Nom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item required label=\"Email de l'utilisateur\">\r\n          <TextInput\r\n            value={store.userStore.user.email}\r\n            onChangeText={text => (store.userStore.user.email = text)}\r\n            placeholder=\"Email\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"N° Telephone\">\r\n          <TextInput\r\n            value={store.userStore.user.tel}\r\n            onChangeText={text => (store.userStore.user.tel = text)}\r\n            placeholder=\"Telephone\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Post de travail\">\r\n          <TextInput\r\n            value={store.userStore.user.job}\r\n            onChangeText={text => (store.userStore.user.job = text)}\r\n            placeholder=\"Travail\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item required label=\"Mot de pass\">\r\n          <TextInput\r\n            value={store.userStore.user.password}\r\n            onChangeText={text => (store.userStore.user.password = text)}\r\n            placeholder=\"Mot de pass\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { StyleSheet, TouchableOpacity, Text } from \"react-native-web\";\nimport {colors} from \"../constants\";\n\n\nconst Link = ({onPress, isSelected, text}) => (\n  <TouchableOpacity\n    onPress={onPress}\n    style={[\n      styles.link,\n      {\n        borderColor:\n          isSelected\n            ? colors.orange\n            : colors.lightGray\n      }\n    ]}\n  >\n    <Text\n      style={{\n        fontWeight: isSelected ? \"bold\" : \"\"\n      }}\n    >\n      {text}\n    </Text>\n  </TouchableOpacity>\n)\n\nconst styles = StyleSheet.create({\n  link: {\n    height: 32,\n    paddingHorizontal: 16,\n    borderRadius: 16,\n    borderWidth: 1,\n    justifyContent: \"center\",\n    marginRight: 10,\n    backgroundColor: colors.lightGray\n  }\n});\n\nLink.propTypes = {\n  text: PropTypes.string.isRequired,\n  isSelected: PropTypes.bool.isRequired,\n  onPress: PropTypes.func.isRequired\n};\n\nexport default Link","import React from \"react\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { View } from \"react-native-web\";\r\n\r\nimport All from \"./All\";\r\nimport Add from \"./Add\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport Link from \"../../components/Link\";\r\nimport Container from \"../../components/Container\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\n\r\nconst Users = withRouter(({ history, location }) => (\r\n  <Container title=\"Gestion des utilisateurs\">\r\n    <View style={globalStyles.links}>\r\n      <Link\r\n        text=\"Tous les utilisateurs\"\r\n        onPress={() => history.push(\"/users\")}\r\n        isSelected={location.pathname === \"/users\"}\r\n      />\r\n      <Link\r\n        text=\"Ajouter un utilisateur\"\r\n        onPress={() => history.push(\"/users/add\")}\r\n        isSelected={location.pathname === \"/users/add\"}\r\n      />\r\n    </View>\r\n    <Route path=\"/users\" component={All} exact />\r\n    <Route path=\"/users/add\" component={Add} exact />\r\n    <Route path=\"/users/edit/:id\" component={Edit} />\r\n  </Container>\r\n));\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {observer} from 'mobx-react'\r\nimport {StyleSheet, View, TouchableOpacity, Text} from \"react-native-web\";\r\nimport {\r\n  FaWindowClose,\r\n  FaCheckSquare,\r\n} from 'react-icons/fa'\r\n\r\nimport store from \"../stores\";\r\n\r\nconst Toast = ({id, text, type, onDismiss}) => (\r\n  <TouchableOpacity\r\n    style={styles.toast}\r\n    onPress={onDismiss}\r\n  >\r\n    {type === \"error\" && <FaWindowClose color={'red'} size={32}/>}\r\n    {type === \"success\" && <FaCheckSquare color={'green'} size={32}/>}\r\n    <Text style={styles.toastText}> {text} </Text>\r\n  </TouchableOpacity>\r\n)\r\n\r\nToast.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  onDismiss: PropTypes.func.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nclass ToastContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <View style={styles.rootContainer}>\r\n        {\r\n          store.toastStore.toasts.map((toast, index) => (\r\n            <Toast\r\n              key={index}\r\n              id={toast.id}\r\n              text={toast.text}\r\n              type={toast.type}\r\n              onDismiss={() => store.toastStore.dismiss(toast.id)}\r\n            />\r\n          ))\r\n        }\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  rootContainer: {\r\n    position: \"absolute\",\r\n    bottom: 100,\r\n    alignItems: \"center\",\r\n    zIndex: 9999\r\n  },\r\n  toast: {\r\n    width: 360,\r\n    flexDirection: \"row\",\r\n    flex: 1,\r\n    padding: 20,\r\n    backgroundColor: \"black\",\r\n    opacity: 0.7,\r\n    alignItems: \"center\",\r\n    borderRadius: 10,\r\n    margin: 5\r\n  },\r\n  toastText: {\r\n    color: \"white\",\r\n    marginLeft: 10\r\n  }\r\n});\r\n\r\nexport default observer(ToastContainer)\r\n","import React from \"react\"\r\nimport {\r\n  View,\r\n  Text\r\n} from \"react-native-web\"\r\n\r\nclass AppUser extends React.Component{\r\n  render(){\r\n    return (\r\n      <View>\r\n        <Text>AppUser</Text>\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AppUser","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  ScrollView,\r\n  FlatList,\r\n  ActivityIndicator\r\n} from \"react-native-web\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Card from \"../../components/Card\";\r\n\r\nclass All extends React.Component {\r\n  componentDidMount() {\r\n    store.articleStore.getAll();\r\n    store.articleStore.selectedId = 0;\r\n  }\r\n  delete(id) {\r\n    if (window.confirm(\"Do you delete that User?\")) {\r\n      store.articleStore.delete(id);\r\n    }\r\n  }\r\n  render() {\r\n    if (store.articleStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    if (store.articleStore.articles.length === 0) {\r\n      return (\r\n        <View style={globalStyles.container}>\r\n          <Text>Il ya aucun articles</Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={globalStyles.container}>\r\n        <View style={globalStyles.header}>\r\n          <TextInput\r\n            placeholder=\"Rechercher un article ...\"\r\n            style={globalStyles.searchInput}\r\n            value={store.articleStore.textSearch}\r\n            onChange={(e)=> store.articleStore.textSearch = e.target.value}\r\n          />\r\n        </View>\r\n\r\n        <ScrollView>\r\n          <View style={globalStyles.cards}>\r\n            {store.articleStore.articles.filter((article)=> {\r\n              if(article.code.includes(store.articleStore.textSearch)) return article\r\n              if(article.designation.includes(store.articleStore.textSearch)) return article\r\n            }).map((article, index) => (\r\n              <Card\r\n                key={index}\r\n                isSelected={store.articleStore.selectedId === article.id}\r\n                onDelete={() => this.delete(article.id)}\r\n                onEdit={() =>\r\n                  this.props.history.push(\"/articles/edit/\" + article.id)\r\n                }\r\n                onPress={() => {\r\n                  store.articleStore.selectedId = article.id;\r\n                }}\r\n              >\r\n                <Text>Code: {article.code}</Text>\r\n                <Text>Designation: {article.designation}</Text>\r\n                <Text>Famille: {article.Famille.name}</Text>\r\n              </Card>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(All);\r\n/*\r\n\r\n */","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  ActivityIndicator,\r\n  Picker\r\n} from \"react-native-web\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    store.articleStore.article = {\r\n      id: 0,\r\n      code: \"\",\r\n      designation: \"\",\r\n      prix_vente: 0.0,\r\n      prix_achat: 0.0,\r\n      qte: 0,\r\n      familleId: 1,\r\n      created_at: null,\r\n      updated_at: null\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (store.articleStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour créer un nouvel article\"\r\n        onSubmit={() => store.articleStore.create()}\r\n      >\r\n        <Form.Item required label=\"Code de l'article\">\r\n          <TextInput\r\n            value={store.articleStore.article.code}\r\n            onChangeText={text => (store.articleStore.article.code = text)}\r\n            placeholder=\"Code\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Designation\">\r\n          <TextInput\r\n            value={store.articleStore.article.designation}\r\n            onChangeText={text => (store.articleStore.article.designation = text)}\r\n            placeholder=\"Designation\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Prix achat\">\r\n          <TextInput\r\n            value={store.articleStore.article.prix_achat}\r\n            onChangeText={text => (store.articleStore.article.prix_achat = text)}\r\n            placeholder=\"Prix achat\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Prix vente\">\r\n          <TextInput\r\n            value={store.articleStore.article.prix_vente}\r\n            onChangeText={text => (store.articleStore.article.prix_vente = text)}\r\n            placeholder=\"Prix vente\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  Picker,\r\n  View,\r\n  ActivityIndicator,\r\n  Text\r\n} from \"react-native-web\";\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    store.articleStore.getArticle(id);\r\n  }\r\n\r\n  render() {\r\n    if (store.articleStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour modifier l'article\"\r\n        onSubmit={() => store.articleStore.update()}\r\n      >\r\n        <Form.Item required label=\"Code de l'article\">\r\n          <TextInput\r\n            value={store.articleStore.article.code}\r\n            onChangeText={text => (store.articleStore.article.code = text)}\r\n            placeholder=\"Code\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Designation\">\r\n          <TextInput\r\n            value={store.articleStore.article.designation}\r\n            onChangeText={text => (store.articleStore.article.designation = text)}\r\n            placeholder=\"Designation\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Prix achat\">\r\n          <TextInput\r\n            value={store.articleStore.article.prix_achat}\r\n            onChangeText={text => (store.articleStore.article.prix_achat = text)}\r\n            placeholder=\"Prix achat\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Prix vente\">\r\n          <TextInput\r\n            value={store.articleStore.article.prix_vente}\r\n            onChangeText={text => (store.articleStore.article.prix_vente = text)}\r\n            placeholder=\"Prix vente\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { View } from \"react-native-web\";\r\n\r\nimport All from \"./All\";\r\nimport Add from \"./Add\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport Link from \"../../components/Link\";\r\nimport Container from \"../../components/Container\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\n\r\nconst Articles = withRouter(({ history, location }) => (\r\n  <Container title=\"Gestion des articles\">\r\n    <View style={globalStyles.links}>\r\n      <Link\r\n        text=\"Tous les articles\"\r\n        onPress={() => history.push(\"/articles\")}\r\n        isSelected={location.pathname === \"/articles\"}\r\n      />\r\n      <Link\r\n        text=\"Ajouter un article\"\r\n        onPress={() => history.push(\"/articles/add\")}\r\n        isSelected={location.pathname === \"/articles/add\"}\r\n      />\r\n    </View>\r\n    <Route path=\"/articles\" component={All} exact />\r\n    <Route path=\"/articles/add\" component={Add} exact />\r\n    <Route path=\"/articles/edit/:id\" component={Edit} />\r\n  </Container>\r\n));\r\n\r\nexport default Articles;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  ScrollView,\r\n  ActivityIndicator\r\n} from \"react-native-web\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Card from \"../../components/Card\";\r\n\r\nclass All extends React.Component {\r\n  componentDidMount() {\r\n    store.fournisseurStore.getAll();\r\n    store.fournisseurStore.selectedId = 0;\r\n  }\r\n  delete(id) {\r\n    if (window.confirm(\"Do you delete that User?\")) {\r\n      store.fournisseurStore.delete(id);\r\n    }\r\n  }\r\n  render() {\r\n    if (store.fournisseurStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    if (store.fournisseurStore.fournisseurs.length === 0) {\r\n      return (\r\n        <View style={globalStyles.container}>\r\n          <Text>Il ya aucun fournisseurs</Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={globalStyles.container}>\r\n        <View style={globalStyles.header}>\r\n          <TextInput\r\n            placeholder=\"Rechercher un fournisseur ...\"\r\n            style={globalStyles.searchInput}\r\n          />\r\n        </View>\r\n        <ScrollView>\r\n          <View style={globalStyles.cards}>\r\n            {store.fournisseurStore.fournisseurs.map((fournisseur, index) => (\r\n              <Card\r\n                key={index}\r\n                isSelected={store.fournisseurStore.selectedId === fournisseur.id}\r\n                onDelete={() => this.delete(fournisseur.id)}\r\n                onEdit={() =>\r\n                  this.props.history.push(\"/fournisseurs/edit/\" + fournisseur.id)\r\n                }\r\n                onPress={() => {\r\n                  store.fournisseurStore.selectedId = fournisseur.id;\r\n                }}\r\n              >\r\n                <Text>{fournisseur.prenom.toUpperCase() + \" \" + fournisseur.nom}</Text>\r\n              </Card>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(All);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  ActivityIndicator,\r\n  Picker\r\n} from \"react-native-web\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    store.fournisseurStore.fournisseur = {\r\n      id: 0,\r\n      nom: \"\",\r\n      prenom: \"\",\r\n      tel: \"\",\r\n      solde: 0,\r\n      type: 0,\r\n      raison_social: \"\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (store.fournisseurStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour créer un nouvel fournisseur\"\r\n        onSubmit={() => store.fournisseurStore.create()}\r\n      >\r\n        <Form.Item required label=\"Nom\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.nom}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.nom = text)}\r\n            placeholder=\"nom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item required label=\"Prénom\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.prenom}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.prenom = text)}\r\n            placeholder=\"prenom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Tel\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.tel}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.tel = text)}\r\n            placeholder=\"Tel\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Raison social\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.raison_social}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.raison_social = text)}\r\n            placeholder=\"Raison social\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Solde initiale\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.solde}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.solde = text)}\r\n            placeholder=\"solde\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  Picker,\r\n  View,\r\n  ActivityIndicator,\r\n  Text\r\n} from \"react-native-web\";\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    store.fournisseurStore.getFournisseur(id);\r\n  }\r\n\r\n  render() {\r\n    if (store.fournisseurStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour modifier l'fournisseur\"\r\n        onSubmit={() => store.fournisseurStore.update()}\r\n      >\r\n        <Form.Item required label=\"Nom\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.nom}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.nom = text)}\r\n            placeholder=\"nom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item required label=\"Prénom\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.prenom}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.prenom = text)}\r\n            placeholder=\"prenom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Tel\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.tel}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.tel = text)}\r\n            placeholder=\"Tel\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Raison social\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.raison_social}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.raison_social = text)}\r\n            placeholder=\"Raison social\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Solde initiale\">\r\n          <TextInput\r\n            value={store.fournisseurStore.fournisseur.solde}\r\n            onChangeText={text => (store.fournisseurStore.fournisseur.solde = text)}\r\n            placeholder=\"solde\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { View } from \"react-native-web\";\r\n\r\nimport All from \"./All\";\r\nimport Add from \"./Add\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport Link from \"../../components/Link\";\r\nimport Container from \"../../components/Container\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\n\r\nconst Fournisseurs = withRouter(({ history, location }) => (\r\n  <Container title=\"Gestion des fournisseurs\">\r\n    <View style={globalStyles.links}>\r\n      <Link\r\n        text=\"Tous les fournisseurs\"\r\n        onPress={() => history.push(\"/fournisseurs\")}\r\n        isSelected={location.pathname === \"/fournisseurs\"}\r\n      />\r\n      <Link\r\n        text=\"Ajouter un fournisseur\"\r\n        onPress={() => history.push(\"/fournisseurs/add\")}\r\n        isSelected={location.pathname === \"/fournisseurs/add\"}\r\n      />\r\n    </View>\r\n    <Route path=\"/fournisseurs\" component={All} exact />\r\n    <Route path=\"/fournisseurs/add\" component={Add} exact />\r\n    <Route path=\"/fournisseurs/edit/:id\" component={Edit} />\r\n  </Container>\r\n));\r\n\r\nexport default Fournisseurs;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  ScrollView,\r\n  ActivityIndicator\r\n} from \"react-native-web\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Card from \"../../components/Card\";\r\n\r\nclass All extends React.Component {\r\n  componentDidMount() {\r\n    store.clientStore.getAll();\r\n    store.clientStore.selectedId = 0;\r\n  }\r\n  delete(id) {\r\n    if (window.confirm(\"Do you delete that User?\")) {\r\n      store.clientStore.delete(id);\r\n    }\r\n  }\r\n  render() {\r\n    if (store.clientStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    if (store.clientStore.clients.length === 0) {\r\n      return (\r\n        <View style={globalStyles.container}>\r\n          <Text>Il ya aucun clients</Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={globalStyles.container}>\r\n        <View style={globalStyles.header}>\r\n          <TextInput\r\n            placeholder=\"Rechercher un client ...\"\r\n            style={globalStyles.searchInput}\r\n          />\r\n        </View>\r\n        <ScrollView>\r\n          <View style={globalStyles.cards}>\r\n            {store.clientStore.clients.map((client, index) => (\r\n              <Card\r\n                key={index}\r\n                isSelected={store.clientStore.selectedId === client.id}\r\n                onDelete={() => this.delete(client.id)}\r\n                onEdit={() =>\r\n                  this.props.history.push(\"/clients/edit/\" + client.id)\r\n                }\r\n                onPress={() => {\r\n                  store.clientStore.selectedId = client.id;\r\n                }}\r\n              >\r\n                <Text>{client.prenom.toUpperCase() + \" \" + client.nom}</Text>\r\n              </Card>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(All);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  ActivityIndicator,\r\n  Picker\r\n} from \"react-native-web\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    store.clientStore.client = {\r\n      id: 0,\r\n      nom: \"\",\r\n      prenom: \"\",\r\n      tel: \"\",\r\n      solde: 0,\r\n      type: 0,\r\n      raison_social: \"\"\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (store.clientStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour créer un nouvel client\"\r\n        onSubmit={() => store.clientStore.create()}\r\n      >\r\n        <Form.Item required label=\"Nom\">\r\n          <TextInput\r\n            value={store.clientStore.client.nom}\r\n            onChangeText={text => (store.clientStore.client.nom = text)}\r\n            placeholder=\"nom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item required label=\"Prénom\">\r\n          <TextInput\r\n            value={store.clientStore.client.prenom}\r\n            onChangeText={text => (store.clientStore.client.prenom = text)}\r\n            placeholder=\"prenom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Tel\">\r\n          <TextInput\r\n            value={store.clientStore.client.tel}\r\n            onChangeText={text => (store.clientStore.client.tel = text)}\r\n            placeholder=\"Tel\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Raison social\">\r\n          <TextInput\r\n            value={store.clientStore.client.raison_social}\r\n            onChangeText={text => (store.clientStore.client.raison_social = text)}\r\n            placeholder=\"Raison social\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Solde initiale\">\r\n          <TextInput\r\n            value={store.clientStore.client.solde}\r\n            onChangeText={text => (store.clientStore.client.solde = text)}\r\n            placeholder=\"solde\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  Picker,\r\n  View,\r\n  ActivityIndicator,\r\n  Text\r\n} from \"react-native-web\";\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    store.clientStore.getClient(id);\r\n  }\r\n\r\n  render() {\r\n    if (store.clientStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour modifier l'client\"\r\n        onSubmit={() => store.clientStore.update()}\r\n      >\r\n        <Form.Item required label=\"Nom\">\r\n          <TextInput\r\n            value={store.clientStore.client.nom}\r\n            onChangeText={text => (store.clientStore.client.nom = text)}\r\n            placeholder=\"nom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item required label=\"Prénom\">\r\n          <TextInput\r\n            value={store.clientStore.client.prenom}\r\n            onChangeText={text => (store.clientStore.client.prenom = text)}\r\n            placeholder=\"prenom\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Tel\">\r\n          <TextInput\r\n            value={store.clientStore.client.tel}\r\n            onChangeText={text => (store.clientStore.client.tel = text)}\r\n            placeholder=\"Tel\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Raison social\">\r\n          <TextInput\r\n            value={store.clientStore.client.raison_social}\r\n            onChangeText={text => (store.clientStore.client.raison_social = text)}\r\n            placeholder=\"Raison social\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Solde initiale\">\r\n          <TextInput\r\n            value={store.clientStore.client.solde}\r\n            onChangeText={text => (store.clientStore.client.solde = text)}\r\n            placeholder=\"solde\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { View } from \"react-native-web\";\r\n\r\nimport All from \"./All\";\r\nimport Add from \"./Add\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport Link from \"../../components/Link\";\r\nimport Container from \"../../components/Container\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\n\r\nconst Clients = withRouter(({ history, location }) => (\r\n  <Container title=\"Gestion des clients\">\r\n    <View style={globalStyles.links}>\r\n      <Link\r\n        text=\"Tous les clients\"\r\n        onPress={() => history.push(\"/clients\")}\r\n        isSelected={location.pathname === \"/clients\"}\r\n      />\r\n      <Link\r\n        text=\"Ajouter un client\"\r\n        onPress={() => history.push(\"/clients/add\")}\r\n        isSelected={location.pathname === \"/clients/add\"}\r\n      />\r\n    </View>\r\n    <Route path=\"/clients\" component={All} exact />\r\n    <Route path=\"/clients/add\" component={Add} exact />\r\n    <Route path=\"/clients/edit/:id\" component={Edit} />\r\n  </Container>\r\n));\r\n\r\nexport default Clients;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  ScrollView,\r\n  FlatList,\r\n  ActivityIndicator\r\n} from \"react-native-web\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\nimport Card from \"../../components/Card\";\r\n\r\nclass All extends React.Component {\r\n  componentDidMount() {\r\n    store.achatStore.getAll();\r\n    store.achatStore.selectedId = 0;\r\n  }\r\n  delete(id) {\r\n    if (window.confirm(\"Do you delete that User?\")) {\r\n      store.achatStore.delete(id);\r\n    }\r\n  }\r\n  render() {\r\n    if (store.achatStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    if (store.achatStore.achats.length === 0) {\r\n      return (\r\n        <View style={globalStyles.container}>\r\n          <Text>Il ya aucun achats</Text>\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={globalStyles.container}>\r\n        <View style={globalStyles.header}>\r\n          <TextInput\r\n            placeholder=\"Rechercher un achat ...\"\r\n            style={globalStyles.searchInput}\r\n          />\r\n        </View>\r\n\r\n        <ScrollView>\r\n          <View style={globalStyles.cards}>\r\n            {store.achatStore.achats.map((achat, index) => (\r\n              <Card\r\n                key={index}\r\n                isSelected={store.achatStore.selectedId === achat.id}\r\n                onDelete={() => this.delete(achat.id)}\r\n                onEdit={() =>\r\n                  this.props.history.push(\"/achats/edit/\" + achat.id)\r\n                }\r\n                onPress={() => {\r\n                  store.achatStore.selectedId = achat.id;\r\n                }}\r\n              >\r\n                <Text>Code: {achat.code}</Text>\r\n                <Text>Designation: {achat.designation}</Text>\r\n                <Text>Famille: {achat.Famille.name}</Text>\r\n              </Card>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(All);\r\n/*\r\n\r\n */","import React, { Component } from 'react'\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput\r\n} from \"react-native-web\"\r\nimport { observer } from \"mobx-react\";\r\n\r\nimport stores from '../stores'\r\n\r\nimport { colors, globalStyles } from \"../constants\";\r\nimport HandleClickOutside from \"./HandleClickOutside\"\r\n\r\nclass InputSearch extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      textValue: \"\",\r\n      showResults: false\r\n    }\r\n  }\r\n  render() {\r\n    const results = this.props.data.filter(article => article.code.includes(this.state.textValue))\r\n    return (\r\n      <View style={{ flex: 1 }}>\r\n        <TextInput\r\n          value={this.state.textValue}\r\n          onChangeText={(text) => this.setState({...this.state, textValue: text})}\r\n          placeholder=\"Rechercher un article ...\"\r\n          style={[globalStyles.searchInput, { width: 500 }]}\r\n          ref={component => this._textInput = component}\r\n          onFocus={() => this.setState({...this.state, showResults: true})}\r\n        />\r\n        {\r\n          (this.state.showResults || (this._textInput && this._textInput.isFocused()))  &&\r\n          <HandleClickOutside handleClick={() => this.setState({...this.state, showResults: false})}>\r\n            <View style={{\r\n              height: 200,\r\n              width: \"100%\",\r\n              top: 32,\r\n              position: \"absolute\",\r\n              backgroundColor: \"white\",\r\n              padding: 5,\r\n              borderRadius: 5,\r\n              shadowColor: \"black\",\r\n              shadowOffset: { width: 3, height: 3 },\r\n              shadowOpacity: 0.5,\r\n              shadowRadius: 10\r\n            }}>\r\n              {\r\n                results.map((article, index) => (\r\n                  <Text key={index}>{article.code}</Text>\r\n                ))\r\n              }\r\n            </View>\r\n          </HandleClickOutside>\r\n        }\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nInputSearch.propTypes = {\r\n\r\n};\r\n\r\nexport default observer(InputSearch);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  View,\r\n  Text,\r\n  ActivityIndicator,\r\n  ScrollView,\r\n\r\n} from \"react-native-web\";\r\n\r\nimport { globalStyles, colors } from \"../../constants\";\r\nimport Card from \"../../components/Card\";\r\n\r\nimport store from \"../../stores\";\r\nimport stores from \"../../stores\";\r\n\r\nimport InputSearch from \"../../components/InputSearch\";\r\n\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    store.achatStore.achat = {\r\n      id: 0,\r\n      fournisseurId: 0,\r\n      userId: 0,\r\n      versement: 0,\r\n      state: \"en attente\",\r\n      articles: [],\r\n      created_at: null,\r\n      updated_at: null\r\n    };\r\n    store.articleStore.getAll()\r\n  }\r\n\r\n  render() {\r\n    if (store.achatStore.loading || store.articleStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <View style={globalStyles.container}>\r\n        <View\r\n          style={{\r\n            justifyContent: \"space-between\",\r\n            height: 48,\r\n            backgroundColor: colors.gray,\r\n            padding: 10,\r\n            borderBottomWidth: 1,\r\n            borderBottomColor: \"white\",\r\n            zIndex: 99999\r\n          }}>\r\n          <InputSearch data={stores.articleStore.articles} />\r\n        </View>\r\n\r\n        <ScrollView>\r\n          <View style={globalStyles.cards}>\r\n            {store.achatStore.achat.articles.map((article, index) => (\r\n              <Card\r\n                key={index}\r\n                onDelete={() => this.delete(article)}\r\n                isSelected={false}\r\n                onEdit={() =>\r\n                  prompt(\"entre la qte de article\")\r\n                }\r\n                onPress={() => {\r\n                  // store.achatStore.selectedId = achat.id;\r\n                }}\r\n              >\r\n                <Text>Code: {article.code}</Text>\r\n                <Text>Designation: {article.designation}</Text>\r\n                <Text>Famille: {article.Famille.name}</Text>\r\n              </Card>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport {\r\n  TextInput,\r\n  Picker,\r\n  View,\r\n  ActivityIndicator,\r\n  Text\r\n} from \"react-native-web\";\r\nimport { globalStyles } from \"../../constants\";\r\nimport Form from \"../../components/Form\";\r\n\r\nimport store from \"../../stores\";\r\n\r\nclass Add extends React.Component {\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    store.achatStore.getAchat(id);\r\n  }\r\n\r\n  render() {\r\n    if (store.achatStore.loading) {\r\n      return (\r\n        <View style={[globalStyles.container, { justifyContent: \"center\" }]}>\r\n          <ActivityIndicator size={48} />\r\n        </View>\r\n      );\r\n    }\r\n    return (\r\n      <Form\r\n        label=\"Sauvegarder pour modifier l'achat\"\r\n        onSubmit={() => store.achatStore.update()}\r\n      >\r\n        <Form.Item required label=\"Code de l'achat\">\r\n          <TextInput\r\n            value={store.achatStore.achat.code}\r\n            onChangeText={text => (store.achatStore.achat.code = text)}\r\n            placeholder=\"Code\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Designation\">\r\n          <TextInput\r\n            value={store.achatStore.achat.designation}\r\n            onChangeText={text => (store.achatStore.achat.designation = text)}\r\n            placeholder=\"Designation\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Prix achat\">\r\n          <TextInput\r\n            value={store.achatStore.achat.prix_achat}\r\n            onChangeText={text => (store.achatStore.achat.prix_achat = text)}\r\n            placeholder=\"Prix achat\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Prix vente\">\r\n          <TextInput\r\n            value={store.achatStore.achat.prix_vente}\r\n            onChangeText={text => (store.achatStore.achat.prix_vente = text)}\r\n            placeholder=\"Prix vente\"\r\n            style={globalStyles.textInput}\r\n          />\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default observer(Add);\r\n","import React from \"react\";\r\nimport { Route, withRouter } from \"react-router-dom\";\r\nimport { View } from \"react-native-web\";\r\n\r\nimport All from \"./All\";\r\nimport Add from \"./Add\";\r\nimport Edit from \"./Edit\";\r\n\r\nimport Link from \"../../components/Link\";\r\nimport Container from \"../../components/Container\";\r\n\r\nimport { globalStyles } from \"../../constants\";\r\n\r\nconst Achats = withRouter(({ history, location }) => (\r\n  <Container title=\"Gestion des achats\">\r\n    <View style={globalStyles.links}>\r\n      <Link\r\n        text=\"Tous les achats\"\r\n        onPress={() => history.push(\"/achats\")}\r\n        isSelected={location.pathname === \"/achats\"}\r\n      />\r\n      <Link\r\n        text=\"Ajouter un achat\"\r\n        onPress={() => history.push(\"/achats/add\")}\r\n        isSelected={location.pathname === \"/achats/add\"}\r\n      />\r\n    </View>\r\n    <Route path=\"/achats\" component={All} exact />\r\n    <Route path=\"/achats/add\" component={Add} exact />\r\n    <Route path=\"/achats/edit/:id\" component={Edit} />\r\n  </Container>\r\n));\r\n\r\nexport default Achats;\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nimport { View, StyleSheet } from \"react-native-web\";\r\nimport Header from \"./containers/Header\";\r\nimport ToastContainer from \"./containers/Toast\";\r\n\r\nimport { colors } from \"./constants\";\r\n\r\nimport Users from \"./containers/Users\";\r\nimport Articles from \"./containers/Articles\";\r\nimport Fournisseurs from \"./containers/Fournisseurs\";\r\nimport Clients from \"./containers/Clients\";\r\nimport Achats from \"./containers/Achats\";\r\n\r\nclass AppAdmin extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <View style={styles.container}>\r\n          <Header />\r\n          <Route path={\"/users\"} component={Users} />\r\n          <Route path={\"/articles\"} component={Articles} />\r\n          <Route path={\"/clients\"} component={Clients} />\r\n          <Route path={\"/fournisseurs\"} component={Fournisseurs} />\r\n          <Route path={\"/achats\"} component={Achats} />\r\n          <ToastContainer />\r\n        </View>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    alignItems: \"center\",\r\n    backgroundColor: colors.darkGray,\r\n    flex: 1\r\n  }\r\n});\r\n\r\nexport default observer(AppAdmin);\r\n","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport {\n  Button,\n  Image,\n  StyleSheet,\n  ActivityIndicator,\n  View\n} from \"react-native-web\";\nimport Login from \"./containers/Login\";\nimport Header from \"./containers/Header\";\nimport Container from \"./components/Container\";\nimport Users from \"./containers/Users\";\nimport ToastContainer from \"./containers/Toast\";\nimport { colors } from \"./constants\";\n\nimport stores from \"./stores\";\nimport AppUser from \"./AppUser\";\nimport AppAdmin from \"./AppAdmin\";\n\nwindow.stores = stores;\n\nclass App extends React.Component {\n  componentWillMount() {\n    stores.userStore.me();\n  }\n  render() {\n    if (stores.userStore.loadingUser) {\n      return (\n        <View style={styles.container}>\n          <Container style={{ justifyContent: \"center\" }}>\n            <ActivityIndicator size={48} />\n          </Container>\n        </View>\n      );\n    }\n    if (stores.userStore.currentUser.username === \"\") {\n      return (\n        <View style={styles.container}>\n          <Login />\n          <ToastContainer />\n        </View>\n      );\n    }\n    if (stores.userStore.currentUser.isAdmin === 1) {\n      return <AppAdmin />;\n    } else\n    {\n      return <AppUser />;\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    backgroundColor: colors.darkGray,\n    flex: 1,\n  }\n});\n\nexport default observer(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { AppRegistry } from \"react-native\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nAppRegistry.registerComponent(\"App\", () => App);\n\nAppRegistry.runApplication(\"App\", {\n  rootTag: document.getElementById(\"root\")\n});\nif (module.hot) {\n  module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}